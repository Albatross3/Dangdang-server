buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.dangdang'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    asciidoctorExtensions
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    runtimeOnly 'com.mysql:mysql-connector-j'

    //elasticsearch
    implementation 'org.springframework.data:spring-data-elasticsearch'
    implementation("jakarta.json:jakarta.json-api:2.0.1")

    //querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

    // mongodb
    implementation ('org.springframework.boot:spring-boot-starter-data-mongodb')

    // S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // jwt
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //valid
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // coolsms
    implementation 'net.nurigo:sdk:4.2.7'


    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // rest docs
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    // validation
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation'
}


tasks.named('test') {
    useJUnitPlatform()
}

jar {
    enabled = false
}

tasks.named('asciidoctor') {
    inputs.dir snippetsDir
    configurations 'asciidoctorExtensions'
    dependsOn test
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("build/docs/asciidoc")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}
